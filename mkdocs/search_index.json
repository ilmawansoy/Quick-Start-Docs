{
    "docs": [
        {
            "location": "/",
            "text": "Welcome to KataDocs\n\n\nIntroduction\n\n\nKata Command Line Interface (Kata CLI) is a tool for creating bots with\nKata Machine Learning (Kata ML) which suited with Natural Language Processing (NLP) technology.\nKata CLI also helps managing the bots with command line / shell of various operating systems.\n\n\nFor more information, check \nour website\n.\n\n\n\n\nInstallation\n\n\nTry Kata Platform\n\n\nInstall Kata-CLI at your device, using this command:\n\n\n$ npm install -g kata-cli\n\n\n\n\nnow you can use command 'kata' globally\n\n\nCommands\n\n\nUse \nkata --help\n to see commands list available\n\n\n\n\nkata bot-init|init [options] <bot> <name> [version]\n - Init the bot\n\n\nkata bot-versions|versions\n - List versions of the bot\n\n\nkata bot-list|list-bots\n - List the bots\n\n\nkata bot-push|push [options]\n - Push the bot\n\n\nkata bot-delete|remove-bot\n - Delete selected bot\n\n\nkata bot-test|test [file]\n\n\nkata bot-console|console [options] <diaenneUrl>\n\n\nkata deployment-deploy|deploy <name> [version]\n - Deploy the bot\n\n\nkata deployment-addChannel|add-channel [options] <name> <channelName>\n - Add bot channel\n\n\nkata deployment-removeChannel|remove-channel <name> <channelName>\n - Remove bot channel\n\n\nkata deployment-drop|drop <name>\n\n\nkata session-get <id> [deploymentId]\n\n\nkata session-create [options] [id] [deploymentId]\n\n\nkata session-update [options] <id> [deploymentId]\n\n\nkata session-delete <id> [deploymentId]\n\n\nkata set <prop> <value>\n\n\nkata login [options] <type> [name]\n\n\n\n\nLogin\n\n\nTo start developing your bot,\nyou need to login using your account as user\n\n\n$ kata login user -u <username>\npassword: <password>\n\n\n\n\nLogin  using your account as team\n\n\n$ kata login team <teamName> -u <username>\npassword: <password>\n\n\n\n\nLogin using token\n\n\n$ kata login user -t <token>",
            "title": "Home"
        },
        {
            "location": "/#welcome-to-katadocs",
            "text": "",
            "title": "Welcome to KataDocs"
        },
        {
            "location": "/#introduction",
            "text": "Kata Command Line Interface (Kata CLI) is a tool for creating bots with\nKata Machine Learning (Kata ML) which suited with Natural Language Processing (NLP) technology.\nKata CLI also helps managing the bots with command line / shell of various operating systems.  For more information, check  our website .",
            "title": "Introduction"
        },
        {
            "location": "/#installation",
            "text": "",
            "title": "Installation"
        },
        {
            "location": "/#try-kata-platform",
            "text": "Install Kata-CLI at your device, using this command:  $ npm install -g kata-cli  now you can use command 'kata' globally",
            "title": "Try Kata Platform"
        },
        {
            "location": "/#commands",
            "text": "Use  kata --help  to see commands list available   kata bot-init|init [options] <bot> <name> [version]  - Init the bot  kata bot-versions|versions  - List versions of the bot  kata bot-list|list-bots  - List the bots  kata bot-push|push [options]  - Push the bot  kata bot-delete|remove-bot  - Delete selected bot  kata bot-test|test [file]  kata bot-console|console [options] <diaenneUrl>  kata deployment-deploy|deploy <name> [version]  - Deploy the bot  kata deployment-addChannel|add-channel [options] <name> <channelName>  - Add bot channel  kata deployment-removeChannel|remove-channel <name> <channelName>  - Remove bot channel  kata deployment-drop|drop <name>  kata session-get <id> [deploymentId]  kata session-create [options] [id] [deploymentId]  kata session-update [options] <id> [deploymentId]  kata session-delete <id> [deploymentId]  kata set <prop> <value>  kata login [options] <type> [name]",
            "title": "Commands"
        },
        {
            "location": "/#login",
            "text": "To start developing your bot,\nyou need to login using your account as user  $ kata login user -u <username>\npassword: <password>  Login  using your account as team  $ kata login team <teamName> -u <username>\npassword: <password>  Login using token  $ kata login user -t <token>",
            "title": "Login"
        },
        {
            "location": "/quickstart/",
            "text": "Quick Start\n\n\nHello Bot\n\n\nBefore started\n\nSimple explanation about the fundamental components of the bot consists of:\n\n\n\n\n nlu's \n: the natural language understanding/model, defined to be used in the bot\n\n\n intents \n : is list of purpose defined to understand user intention\n\n\n states \n : is the stages/procedure of interaction with user\n\n\n actions \n : is list of action defined to perform in each state \n\n\n methods \n : case of more complicated computation/action needed. In javascript language\n\n\n\n\nInit project\n\n\nCreate folder for your bot project, and init your bot there.\n\n\n$ mkdir <bot-folder>\n$ cd <bot-folder>\n$ kata init <bot-id> <bot-name> [version]\n\n\n\n\nNote: login not required to init bot\n\n\nthis will generate folder with \nnlu.yml, bot.yml, message.yml, flows folder\n\nexample:\n\n\nschema: kata.ai/schema/kata-ml/1.0\nname: <bot-name>\ndesc: Bot Description\nversion: <bot-version> #example 0.0.1\nflows:\n    fallback: $include(./flows/fallback.yml)\nconfig:\n    messages: $include(./messages.yml)\n    maxRecursion: 10\nnlus: $include(./nlu.yml)\nid: <bot-id>\n\n\n\n\nWriting Flow\n\n\nModify \nnlu.yml\n, to add handler for the next intent\n\n\nconfidenceLevel:\n    type: method\n    method: confidenceLevel\n\n# nlu greet will define input keyword hello, hallo, hai, and hi as hello\ngreet:\n    type: keyword\n    options:\n        keywords:\n            hello:\n                - hello\n                - hallo\n                - hai\n                - hi\n\n\n\n\nModify intents at \nflow/fallback.yml\n. \nMake 'hi' intents to use nlu 'greet' instead.\n\n\nhi:\n    initial: true\n    type: text\n    classifier:\n        nlu: greet\n\n\n\n\nFlow Explanation\n\n\n\n\nIntent will have value of 'hi' if input is caught by 'greet' NLU, and 'dunno' if no other intent caught by its classifier ('fallback: true' is like the default)\n\n\nAfter going to intents, next step is to go to states which have the value 'initial: true'.\n\n\nCase the input caught by 'hi' intents ('hello', hallo, etc).\n    'sayHi' transitions condition will be fulfilled, then at 'sayHi' transitions 'sayHi' actions will give text output from messages.yml with templates/sayHi's value\n\n\nCase the input not caught by any intent (will have 'dunno' as its intents).\n    'sorry' transitions condition as the default transitions from 'init' will be fulfilled, then at 'sorry' transitions 'saySorry' actions will give text output from messages.yml with templates/saySorry's value\n\n\n\n\nPush your Bot\n\n\n$ kata push --rev <patch | minor | major>\n\n\n\n\nDeployment\n\n\n$ kata deploy <bot-name> [version]\n\n\n\n\nNOTE: Repeat push and deployment each time you want to update your bot at the messaging application\n\n\nAdding Channel\n\n\nImportant:\n This section and \nSetup Bot\n\nare related.\n\n\n$ kata add-channel [options] <bot-name> <channelName> : ChannelId\ntype: <line | fbmessenger>\ntoken: <channel access token> # given from the chat platform\nrefreshToken : [refresToken] # may empty\nsecret: <channel secret>\nurl: <url> # Example: 'https://api.line.me' for LINE\n\n\n\n\nExample\n\n\n$ kata add-channel botName botChannel\n\n\n\n\nNOTE:\n \n\n\n\n\nadding channel required at least ONCE\n\n\nchannelName can be anything (to differentiate channels)\n\n\n\n\nAdding webhook\n\n\nSetup webhook into url:\n\n\nhttps://kanal.kata.ai/receive_message/{channelId}\n\n\n\n\nNOTE: channelId generated from kata deployment-addChannel\n\n\nExample\n\n\n\nExample: Create and Setup Bot Official Account (LINE)\n\n\nStep:\n\n\n\n\nOpen Line Business web page\n\n\nChoose Messaging API, Start Using Developer Trial\n\n\nFill required information\n\n\nEnable API\n\n\nChoose Settings \u2192 Bot Settings, Allow use webhooks and open LINE Developers\n\n\nDon't forget to add Webhook URL\n\n\n\n\nExample\n\n\n\n\nImportant: \nThis bot information is needed in \nSetup/Adding Channel",
            "title": "Quick Start"
        },
        {
            "location": "/quickstart/#quick-start",
            "text": "",
            "title": "Quick Start"
        },
        {
            "location": "/quickstart/#hello-bot",
            "text": "Before started Simple explanation about the fundamental components of the bot consists of:    nlu's  : the natural language understanding/model, defined to be used in the bot   intents   : is list of purpose defined to understand user intention   states   : is the stages/procedure of interaction with user   actions   : is list of action defined to perform in each state    methods   : case of more complicated computation/action needed. In javascript language",
            "title": "Hello Bot"
        },
        {
            "location": "/quickstart/#init-project",
            "text": "Create folder for your bot project, and init your bot there.  $ mkdir <bot-folder>\n$ cd <bot-folder>\n$ kata init <bot-id> <bot-name> [version]  Note: login not required to init bot  this will generate folder with  nlu.yml, bot.yml, message.yml, flows folder \nexample:  schema: kata.ai/schema/kata-ml/1.0\nname: <bot-name>\ndesc: Bot Description\nversion: <bot-version> #example 0.0.1\nflows:\n    fallback: $include(./flows/fallback.yml)\nconfig:\n    messages: $include(./messages.yml)\n    maxRecursion: 10\nnlus: $include(./nlu.yml)\nid: <bot-id>",
            "title": "Init project"
        },
        {
            "location": "/quickstart/#writing-flow",
            "text": "Modify  nlu.yml , to add handler for the next intent  confidenceLevel:\n    type: method\n    method: confidenceLevel\n\n# nlu greet will define input keyword hello, hallo, hai, and hi as hello\ngreet:\n    type: keyword\n    options:\n        keywords:\n            hello:\n                - hello\n                - hallo\n                - hai\n                - hi  Modify intents at  flow/fallback.yml . \nMake 'hi' intents to use nlu 'greet' instead.  hi:\n    initial: true\n    type: text\n    classifier:\n        nlu: greet  Flow Explanation   Intent will have value of 'hi' if input is caught by 'greet' NLU, and 'dunno' if no other intent caught by its classifier ('fallback: true' is like the default)  After going to intents, next step is to go to states which have the value 'initial: true'.  Case the input caught by 'hi' intents ('hello', hallo, etc).\n    'sayHi' transitions condition will be fulfilled, then at 'sayHi' transitions 'sayHi' actions will give text output from messages.yml with templates/sayHi's value  Case the input not caught by any intent (will have 'dunno' as its intents).\n    'sorry' transitions condition as the default transitions from 'init' will be fulfilled, then at 'sorry' transitions 'saySorry' actions will give text output from messages.yml with templates/saySorry's value",
            "title": "Writing Flow"
        },
        {
            "location": "/quickstart/#push-your-bot",
            "text": "$ kata push --rev <patch | minor | major>",
            "title": "Push your Bot"
        },
        {
            "location": "/quickstart/#deployment",
            "text": "$ kata deploy <bot-name> [version]  NOTE: Repeat push and deployment each time you want to update your bot at the messaging application",
            "title": "Deployment"
        },
        {
            "location": "/quickstart/#adding-channel",
            "text": "Important:  This section and  Setup Bot \nare related.  $ kata add-channel [options] <bot-name> <channelName> : ChannelId\ntype: <line | fbmessenger>\ntoken: <channel access token> # given from the chat platform\nrefreshToken : [refresToken] # may empty\nsecret: <channel secret>\nurl: <url> # Example: 'https://api.line.me' for LINE  Example  $ kata add-channel botName botChannel  NOTE:     adding channel required at least ONCE  channelName can be anything (to differentiate channels)",
            "title": "Adding Channel"
        },
        {
            "location": "/quickstart/#adding-webhook",
            "text": "Setup webhook into url:  https://kanal.kata.ai/receive_message/{channelId}  NOTE: channelId generated from kata deployment-addChannel  Example",
            "title": "Adding webhook"
        },
        {
            "location": "/quickstart/#example-create-and-setup-bot-official-account-line",
            "text": "Step:   Open Line Business web page  Choose Messaging API, Start Using Developer Trial  Fill required information  Enable API  Choose Settings \u2192 Bot Settings, Allow use webhooks and open LINE Developers  Don't forget to add Webhook URL   Example   Important:  This bot information is needed in  Setup/Adding Channel",
            "title": "Example: Create and Setup Bot Official Account (LINE)"
        }
    ]
}